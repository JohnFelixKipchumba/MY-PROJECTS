/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package streetSparkle;

import javax.swing.JOptionPane;
import javax.swing.text.DefaultStyledDocument;
import javax.swing.text.StyledDocument;

/**
 *
 * @author John Felix
 */
public class HRreportsPanel extends javax.swing.JPanel {
    
    private final StyledDocument document = new DefaultStyledDocument(); // doc handles reports
    public Database database; // class obj
    public Reports aReport; // class obj

    /**
     * Creates new form HRreportsPanel
     */
    public HRreportsPanel() {
        /* variables instantiation */
        database = new Database();
        aReport = new Reports();
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        reportsPanel = new javax.swing.JPanel();
        staffDetailsButton = new javax.swing.JButton();
        aStaffDetailsButton = new javax.swing.JButton();
        casualDetailsButton = new javax.swing.JButton();
        aCasualDetailsButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        hrReportsTextPane = new javax.swing.JTextPane();

        setBackground(new java.awt.Color(255, 255, 255));

        reportsPanel.setBackground(new java.awt.Color(255, 236, 252));

        staffDetailsButton.setBackground(new java.awt.Color(204, 255, 102));
        staffDetailsButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        staffDetailsButton.setText("Staff Details");
        staffDetailsButton.setToolTipText("click to view all staff details");
        staffDetailsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                staffDetailsButtonHandler(evt);
            }
        });

        aStaffDetailsButton.setBackground(new java.awt.Color(204, 255, 102));
        aStaffDetailsButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        aStaffDetailsButton.setText("A Staff's Details");
        aStaffDetailsButton.setToolTipText("click to view a staff details");
        aStaffDetailsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aStaffDetailsButtonHandler(evt);
            }
        });

        casualDetailsButton.setBackground(new java.awt.Color(204, 255, 102));
        casualDetailsButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        casualDetailsButton.setText("Casuals Details");
        casualDetailsButton.setToolTipText("click to view all casuals details");
        casualDetailsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                casualDetailsButtonHandler(evt);
            }
        });

        aCasualDetailsButton.setBackground(new java.awt.Color(204, 255, 102));
        aCasualDetailsButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        aCasualDetailsButton.setText("A Casual's Details");
        aCasualDetailsButton.setToolTipText("click to view a casual's details");
        aCasualDetailsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aCasualDetailsButtonHandler(evt);
            }
        });

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));

        hrReportsTextPane.setEditable(false);
        hrReportsTextPane.setBackground(new java.awt.Color(255, 255, 255));
        hrReportsTextPane.setDocument(document);
        hrReportsTextPane.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        hrReportsTextPane.setStyledDocument(document);
        jScrollPane1.setViewportView(hrReportsTextPane);

        javax.swing.GroupLayout reportsPanelLayout = new javax.swing.GroupLayout(reportsPanel);
        reportsPanel.setLayout(reportsPanelLayout);
        reportsPanelLayout.setHorizontalGroup(
            reportsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reportsPanelLayout.createSequentialGroup()
                .addGroup(reportsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(reportsPanelLayout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(staffDetailsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(aStaffDetailsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(casualDetailsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(aCasualDetailsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(reportsPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        reportsPanelLayout.setVerticalGroup(
            reportsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reportsPanelLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(reportsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(staffDetailsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(aStaffDetailsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(casualDetailsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(aCasualDetailsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 634, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(reportsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(reportsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void staffDetailsButtonHandler(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_staffDetailsButtonHandler
        // load staff details into JTextpane
        aReport.generateStaffDetailsReport(document,hrReportsTextPane);
    }//GEN-LAST:event_staffDetailsButtonHandler

    private void aStaffDetailsButtonHandler(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aStaffDetailsButtonHandler
        try {
            // get search id value from user
            String idInput = JOptionPane.showInputDialog(null, "Input the Staff National ID.", "Street Sparkle- Input the search ID", JOptionPane.QUESTION_MESSAGE);
            // validate the input date
            if(idInput.isBlank() || idInput.equals("")) {
                // do nothing
            }
            // validate input id value
            else if(Authenticator.validateID(idInput) == false) {
                // display error message
                JOptionPane.showMessageDialog( null, "Please input a valid ID number (8 digits)!", "Reports Error - Street Sparkle", JOptionPane.WARNING_MESSAGE );
            }
            // confirm if staff ID in database
            else if(database.confirmStaffID(Integer.parseInt(idInput)) == false) {
                // displaying of error message 
                JOptionPane.showMessageDialog( null, "Staff Details Not in record!", "Reports Error- Street Sparkle", JOptionPane.ERROR_MESSAGE );
            }
            // load staff details into JTextpane
            else {
                aReport.generateAStaffDetailsReport(document,Integer.parseInt(idInput),hrReportsTextPane);
            }
        } catch(NullPointerException e) {
            // do nothing
        }
    }//GEN-LAST:event_aStaffDetailsButtonHandler

    private void casualDetailsButtonHandler(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_casualDetailsButtonHandler
        // load casual details into JTextpane
        aReport.generateCasualDetailsReport(document,hrReportsTextPane);
    }//GEN-LAST:event_casualDetailsButtonHandler

    private void aCasualDetailsButtonHandler(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aCasualDetailsButtonHandler
        // get search id value from user
        String idInput = JOptionPane.showInputDialog(null, "Input the Casual National ID.", "Street Sparkle- Input the search ID", JOptionPane.QUESTION_MESSAGE);
        // validate the input date
        if(idInput.isBlank() || idInput.equals("")) {
            // do nothing
        }
        // validate input id value
        else if(Authenticator.validateID(idInput) == false) {
            // display error message
            JOptionPane.showMessageDialog( null, "Please input a valid ID number (8 digits)!", "Reports Error - Street Sparkle", JOptionPane.WARNING_MESSAGE );
        }
        // confirm if staff ID in database
        else if(database.confirmCasualId(Integer.parseInt(idInput)) == false) {
            // displaying of error message 
            JOptionPane.showMessageDialog( null, "Casual Details Not in record!", "Reports Error- Street Sparkle", JOptionPane.ERROR_MESSAGE );
        }
        // load staff details into JTextpane
        else {
            aReport.generateACasualDetailsReport(document,Integer.parseInt(idInput),hrReportsTextPane);
        }
    }//GEN-LAST:event_aCasualDetailsButtonHandler


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aCasualDetailsButton;
    private javax.swing.JButton aStaffDetailsButton;
    private javax.swing.JButton casualDetailsButton;
    private javax.swing.JTextPane hrReportsTextPane;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel reportsPanel;
    private javax.swing.JButton staffDetailsButton;
    // End of variables declaration//GEN-END:variables
}
