/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package streetSparkle;

import java.time.LocalDate;
import java.time.format.DateTimeParseException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author John Felix
 */
public class SalesProjectPanel extends javax.swing.JPanel {
    
    Database database; // class obj
    Staff aStaff; // class obj
    Projects aProject; // class obj

    /**
     * Creates new form SalesProjectPanel
     */
    public SalesProjectPanel() {
        /* variable instantiation */
        database = new Database();
        aStaff = new Staff();
        aProject = new Projects();
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SalesProjMainPanel = new javax.swing.JPanel();
        projectsTabbedPane = new javax.swing.JTabbedPane();
        registerTabPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        locationTF = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        staffNoTF = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        startTF = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        endTF = new javax.swing.JTextField();
        vehicleTF = new javax.swing.JTextField();
        projTitleComboBox = new javax.swing.JComboBox<>();
        projCountyComboBox = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        regProjectTable = new javax.swing.JTable();
        submitProjButton = new javax.swing.JButton();
        resetProjButton = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        updateTabPanel = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        updateProjTable = new javax.swing.JTable();
        beforePicLabel = new javax.swing.JLabel();
        afterPicLabel = new javax.swing.JLabel();
        extensionCheckBox = new javax.swing.JCheckBox();
        updateExtensionTF = new javax.swing.JTextField();
        updateStaffNoTF = new javax.swing.JTextField();
        staffNoCheckBox = new javax.swing.JCheckBox();
        statusCheckBox = new javax.swing.JCheckBox();
        updateSuccessLabel = new javax.swing.JLabel();
        clearUpdateButton = new javax.swing.JButton();
        updateProjButton = new javax.swing.JButton();
        statusComboBox = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(1150, 700));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                componentHiddenHandler(evt);
            }
            public void componentShown(java.awt.event.ComponentEvent evt) {
                componentShownHandler(evt);
            }
        });

        SalesProjMainPanel.setBackground(new java.awt.Color(204, 255, 204));

        projectsTabbedPane.setBackground(new java.awt.Color(255, 255, 255));
        projectsTabbedPane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0), 2));
        projectsTabbedPane.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        projectsTabbedPane.setPreferredSize(new java.awt.Dimension(1150, 700));

        registerTabPanel.setBackground(new java.awt.Color(249, 251, 253));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setLabelFor(locationTF);
        jLabel1.setText("Location");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setLabelFor(projTitleComboBox);
        jLabel2.setText("Project Title");

        locationTF.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setLabelFor(staffNoTF);
        jLabel3.setText("Staffing Number");

        staffNoTF.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        staffNoTF.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        staffNoTF.setToolTipText("enter number of staff/casuals for project");
        staffNoTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                numericKeyTypedHandler(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setLabelFor(projCountyComboBox);
        jLabel4.setText("County");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setLabelFor(endTF);
        jLabel5.setText("End Date");

        startTF.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        startTF.setText("YYYY-MM-DD");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setLabelFor(startTF);
        jLabel6.setText("Start Date");

        endTF.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        endTF.setText("YYYY-MM-DD");

        vehicleTF.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        projTitleComboBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        projTitleComboBox.setMaximumRowCount(5);
        projTitleComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Alley Maintenance", "Bulk and Brush", "Facilities Management", "Fleet Management", "Graffiti Removal", "Grounds Management", "Leaf Collection", "Neighbourhood Clean-ups", "Potholes", "Recycling", "Sidewalk Maintenance", "Street Cleaning", "Trash Collection", "Urban Forestry" }));
        projTitleComboBox.setToolTipText("select project title/type");

        projCountyComboBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        projCountyComboBox.setMaximumRowCount(5);
        projCountyComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MOMBASA", "KWALE", "KILIFI", "TANA RIVER", "LAMU", "TAITA/TAVETA", "GARISSA", "WAJIR", "MANDERA", "MARSABIT", "ISIOLO", "MERU", "THARAKA-NITHI", "EMBU", "KITUI", "MACHAKOS", "MAKUENI", "NYANDARUA", "NYERI", "KIRINYAGA", "MURANG'A", "KIAMBU", "TURKANA", "WEST POKOT", "SAMBURU", "TRANS NZOIA", "UASIN GISHU", "ELGEYO/MARAKWET", "NANDI", "BARINGO", "LAIKIPIA", "NAKURU", "NAROK", "KAJIADO", "KERICHO", "BOMET", "KAKAMEGA", "VIHIGA", "BUNGOMA", "BUSIA", "SIAYA", "KISUMU", "HOMA BAY", "MIGORI", "KISII", "NYAMIRA", "NAIROBI CITY" }));
        projCountyComboBox.setToolTipText("select county for project");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 0, 0));
        jLabel7.setText("Select Project Supervisor from Table");
        jLabel7.setToolTipText("");

        regProjectTable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        regProjectTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "First Name", "Mid Name", "Last Name", "Gender", "Phone", "Email", "County", "Title"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        regProjectTable.setGridColor(new java.awt.Color(255, 0, 0));
        regProjectTable.setSelectionBackground(new java.awt.Color(204, 0, 0));
        regProjectTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        regProjectTable.setShowGrid(true);
        jScrollPane1.setViewportView(regProjectTable);

        submitProjButton.setBackground(new java.awt.Color(255, 117, 186));
        submitProjButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        submitProjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Icons/folder-download.png"))); // NOI18N
        submitProjButton.setText("Submit");
        submitProjButton.setToolTipText("click to submit registered project");
        submitProjButton.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        submitProjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitProjButtonHandler(evt);
            }
        });

        resetProjButton.setBackground(new java.awt.Color(255, 117, 186));
        resetProjButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        resetProjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Icons/refresh.png"))); // NOI18N
        resetProjButton.setText("Reset");
        resetProjButton.setToolTipText("click to reset all fields");
        resetProjButton.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        resetProjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetProjButtonHandler(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setLabelFor(vehicleTF);
        jLabel11.setText("Vehicle Registration");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel12.setText("(leave blank if no vehicle)");

        javax.swing.GroupLayout registerTabPanelLayout = new javax.swing.GroupLayout(registerTabPanel);
        registerTabPanel.setLayout(registerTabPanelLayout);
        registerTabPanelLayout.setHorizontalGroup(
            registerTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registerTabPanelLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(registerTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(registerTabPanelLayout.createSequentialGroup()
                        .addGap(412, 412, 412)
                        .addComponent(resetProjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(submitProjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, registerTabPanelLayout.createSequentialGroup()
                        .addGroup(registerTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(registerTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(vehicleTF)
                            .addComponent(startTF, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE))
                        .addGroup(registerTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(registerTabPanelLayout.createSequentialGroup()
                                .addGap(100, 100, 100)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(registerTabPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(endTF, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, registerTabPanelLayout.createSequentialGroup()
                        .addGroup(registerTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(registerTabPanelLayout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(projTitleComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(registerTabPanelLayout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(projCountyComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(100, 100, 100)
                        .addGroup(registerTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(registerTabPanelLayout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(staffNoTF, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, registerTabPanelLayout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(locationTF, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(103, 103, 103))
        );
        registerTabPanelLayout.setVerticalGroup(
            registerTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, registerTabPanelLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(registerTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(locationTF, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                    .addComponent(projTitleComboBox))
                .addGap(18, 18, 18)
                .addGroup(registerTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(staffNoTF)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(projCountyComboBox, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(18, 18, 18)
                .addGroup(registerTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(endTF, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(startTF, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(registerTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                    .addComponent(vehicleTF, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addGroup(registerTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(resetProjButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(submitProjButton, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE))
                .addGap(100, 100, 100))
        );

        projectsTabbedPane.addTab("Register Project  ", new javax.swing.ImageIcon(getClass().getResource("/resources/Icons/broom.png")), registerTabPanel, "click to register project"); // NOI18N

        updateTabPanel.setBackground(new java.awt.Color(249, 251, 253));
        updateTabPanel.setPreferredSize(new java.awt.Dimension(1134, 695));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 0, 0));
        jLabel8.setText("Select from table Project to update, then fill Update Details");

        updateProjTable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        updateProjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title", "Location", "County", "Start", "End", "Staff No.", "Extension", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        updateProjTable.setGridColor(new java.awt.Color(255, 51, 0));
        updateProjTable.setSelectionBackground(new java.awt.Color(204, 0, 51));
        updateProjTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        updateProjTable.setShowGrid(true);
        updateProjTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateProjTableMouseClickedHandler(evt);
            }
        });
        jScrollPane2.setViewportView(updateProjTable);

        beforePicLabel.setBackground(new java.awt.Color(255, 255, 255));
        beforePicLabel.setMaximumSize(new java.awt.Dimension(450, 300));
        beforePicLabel.setMinimumSize(new java.awt.Dimension(450, 300));
        beforePicLabel.setPreferredSize(new java.awt.Dimension(450, 300));

        afterPicLabel.setBackground(new java.awt.Color(255, 255, 255));
        afterPicLabel.setMaximumSize(new java.awt.Dimension(450, 300));
        afterPicLabel.setMinimumSize(new java.awt.Dimension(450, 300));
        afterPicLabel.setPreferredSize(new java.awt.Dimension(450, 300));

        extensionCheckBox.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        extensionCheckBox.setText("Extension (days)");
        extensionCheckBox.setToolTipText("click to update project extension days");
        extensionCheckBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                checkBoxesHandler(evt);
            }
        });

        updateExtensionTF.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        updateExtensionTF.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        updateExtensionTF.setEnabled(false);
        updateExtensionTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                numericKeyTypedHandler(evt);
            }
        });

        updateStaffNoTF.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        updateStaffNoTF.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        updateStaffNoTF.setEnabled(false);
        updateStaffNoTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                numericKeyTypedHandler(evt);
            }
        });

        staffNoCheckBox.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        staffNoCheckBox.setText("Staffing Number");
        staffNoCheckBox.setToolTipText("click to update project staff/casual no.");
        staffNoCheckBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                checkBoxesHandler(evt);
            }
        });

        statusCheckBox.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        statusCheckBox.setText("Status");
        statusCheckBox.setToolTipText("click to update project status");
        statusCheckBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                checkBoxesHandler(evt);
            }
        });

        updateSuccessLabel.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        updateSuccessLabel.setForeground(new java.awt.Color(255, 0, 0));

        clearUpdateButton.setBackground(new java.awt.Color(255, 117, 186));
        clearUpdateButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        clearUpdateButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Icons/delete_1.png"))); // NOI18N
        clearUpdateButton.setText("Clear");
        clearUpdateButton.setToolTipText("click to clear fields");
        clearUpdateButton.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        clearUpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearUpdateButtonHandler(evt);
            }
        });

        updateProjButton.setBackground(new java.awt.Color(255, 117, 186));
        updateProjButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        updateProjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Icons/folder-download(1).png"))); // NOI18N
        updateProjButton.setText("Update");
        updateProjButton.setToolTipText("click to update changes");
        updateProjButton.setEnabled(false);
        updateProjButton.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        updateProjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateProjButtonHandler(evt);
            }
        });

        statusComboBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        statusComboBox.setMaximumRowCount(3);
        statusComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PENDING", "ONGOING", "COMPLETE" }));
        statusComboBox.setEnabled(false);

        jLabel9.setFont(new java.awt.Font("Wide Latin", 0, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 153, 0));
        jLabel9.setText("Before Pic");

        jLabel10.setFont(new java.awt.Font("Wide Latin", 0, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 153, 0));
        jLabel10.setText("After Pic");

        javax.swing.GroupLayout updateTabPanelLayout = new javax.swing.GroupLayout(updateTabPanel);
        updateTabPanel.setLayout(updateTabPanelLayout);
        updateTabPanelLayout.setHorizontalGroup(
            updateTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateTabPanelLayout.createSequentialGroup()
                .addGroup(updateTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(updateTabPanelLayout.createSequentialGroup()
                        .addGap(291, 291, 291)
                        .addGroup(updateTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(statusCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, updateTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(staffNoCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(extensionCheckBox, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(12, 12, 12)
                        .addGroup(updateTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(updateStaffNoTF, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(statusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(updateExtensionTF, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(44, 44, 44)
                        .addGroup(updateTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(updateProjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(clearUpdateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(updateSuccessLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(updateTabPanelLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(updateTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1042, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 465, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(updateTabPanelLayout.createSequentialGroup()
                                .addGroup(updateTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(beforePicLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(updateTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(afterPicLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(90, 90, 90))
        );
        updateTabPanelLayout.setVerticalGroup(
            updateTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, updateTabPanelLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(updateTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(updateSuccessLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(updateTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(extensionCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                        .addComponent(updateExtensionTF, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(updateTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(staffNoCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(updateStaffNoTF, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(clearUpdateButton, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(updateTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(statusCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(statusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateProjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(updateTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(updateTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(beforePicLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(afterPicLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        projectsTabbedPane.addTab("Update Project  ", new javax.swing.ImageIcon(getClass().getResource("/resources/Icons/settings-sliders.png")), updateTabPanel, "click to update project details"); // NOI18N

        javax.swing.GroupLayout SalesProjMainPanelLayout = new javax.swing.GroupLayout(SalesProjMainPanel);
        SalesProjMainPanel.setLayout(SalesProjMainPanelLayout);
        SalesProjMainPanelLayout.setHorizontalGroup(
            SalesProjMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SalesProjMainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(projectsTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 1138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        SalesProjMainPanelLayout.setVerticalGroup(
            SalesProjMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SalesProjMainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(projectsTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 688, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(SalesProjMainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(SalesProjMainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void numericKeyTypedHandler(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numericKeyTypedHandler
        // get typed character
        char testChar = evt.getKeyChar();
        // if not numeric/digit reject character        
        if(!(Character.isDigit(testChar)))  {
            evt.consume();
        }
    }//GEN-LAST:event_numericKeyTypedHandler

    private void componentHiddenHandler(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_componentHiddenHandler
        // clear table and list data
        aStaff.getStaffList().clear(); // clear list objects
        aProject.getProjectList().clear(); // clear list objects
        // clear supervisor table data 
        DefaultTableModel model1 = ( DefaultTableModel ) regProjectTable.getModel();
        model1.getDataVector().removeAllElements();
        model1.fireTableDataChanged(); // notifies the JTable that the model has changed
        // clear projects table data 
        DefaultTableModel model = ( DefaultTableModel ) updateProjTable.getModel();
        model.getDataVector().removeAllElements();
        model.fireTableDataChanged(); // notifies the JTable that the model has changed
    }//GEN-LAST:event_componentHiddenHandler

    private void componentShownHandler(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_componentShownHandler
        // load data into supervisor table
        aStaff.fetchSupervisorDetails(regProjectTable);
        // load data into projects table
        aProject.fetchUpdateProject(updateProjTable);
        // clear images on jlabels
        beforePicLabel.setIcon(null);
        afterPicLabel.setIcon(null);
    }//GEN-LAST:event_componentShownHandler

    private void resetProjButtonHandler(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetProjButtonHandler
        // clear all fields and table selection
        startTF.setText("YYYY-MM-DD");
        endTF.setText("YYYY-MM-DD");
        locationTF.setText("");
        staffNoTF.setText("");
        vehicleTF.setText("");
        submitProjButton.setEnabled(true);
        regProjectTable.clearSelection();
    }//GEN-LAST:event_resetProjButtonHandler

    private void submitProjButtonHandler(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitProjButtonHandler
        // confirm text fields not empty
        if(startTF.getText().isBlank() || endTF.getText().isBlank() || locationTF.getText().isBlank() || staffNoTF.getText().isBlank() ) {
            // display error message
            JOptionPane.showMessageDialog( null, "Please Fill All Fields!", "Add New Project Error - Street Sparkle", JOptionPane.WARNING_MESSAGE );
        } else {
            try {                
                String projTitle = projTitleComboBox.getSelectedItem().toString();
                String projCounty = projCountyComboBox.getSelectedItem().toString();
                // validate start date
                if(Authenticator.validateDate(startTF.getText()) == false) {
                    // display error message
                    JOptionPane.showMessageDialog( null, "Please input valid Date!\neg.2023-05-03", "Add New Project Error - Street Sparkle", JOptionPane.WARNING_MESSAGE );
                }
                // validate end date
                else if(Authenticator.validateDate(endTF.getText()) == false) {
                    // display error message
                    JOptionPane.showMessageDialog( null, "Please input valid Date!\neg.2023-05-03", "Add New Project - Street Sparkle", JOptionPane.WARNING_MESSAGE );
                }
                // ensure staffing no. greater than zero
                else if(Integer.parseInt(staffNoTF.getText()) <= 0) {
                    // display error message
                    JOptionPane.showMessageDialog( null, "Staffing number should be greater than zero!", "Add New Project - Street Sparkle", JOptionPane.WARNING_MESSAGE );
                }
                // ensure start & end dates are after today
                else if(LocalDate.parse(startTF.getText()).isBefore(LocalDate.now()) || LocalDate.parse(endTF.getText()).isBefore(LocalDate.now())) {
                    // display error message
                    JOptionPane.showMessageDialog( null, "Start and End Dates should be After today's date!", "Add New Project - Street Sparkle", JOptionPane.WARNING_MESSAGE );
                } 
                // ensure supervisor selected from table
                else if(regProjectTable.getSelectionModel().isSelectionEmpty() == true) {
                    // displaying of NULL items selected error message */
                    JOptionPane.showMessageDialog( null, "Select a Supervisor staff from Table!","Add New Project Error- Street Sparkle", JOptionPane.WARNING_MESSAGE );
                }
                // record new project details to database
                else {   
                    String vehicleReg; // stores vehicle reg if inputted
                    String staffSN = aStaff.selectedSupervisorDetails(regProjectTable); // get supervisor staffSN from table selection
                    // set vehicleReg if filled
                    if(vehicleTF.getText().isBlank() == true) {
                        vehicleReg = "null";
                    } else {
                        vehicleReg = vehicleTF.getText();
                    }
                    // record project into database
                    database.addProject(projTitle, staffSN, locationTF.getText(), projCounty, Integer.parseInt(staffNoTF.getText()),
                            startTF.getText(), endTF.getText(), vehicleReg, submitProjButton);
                }
                
            } catch(DateTimeParseException e) {
                // display error message
                JOptionPane.showMessageDialog( null, "Please input valid Date!", "Add New Project Error - Street Sparkle", JOptionPane.WARNING_MESSAGE );
            }     
        } // end outer else
    }//GEN-LAST:event_submitProjButtonHandler

    private void checkBoxesHandler(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_checkBoxesHandler
        // on click, enable the selected check boxes' text fields and buttons
        if(evt.getSource() == extensionCheckBox) {
            if(extensionCheckBox.isSelected()) {
                updateExtensionTF.setEnabled(true);
                updateProjButton.setEnabled(true);
            } else {
                updateExtensionTF.setEnabled(false);
                updateProjButton.setEnabled(false);
            }           
        }
        
        if(evt.getSource() == staffNoCheckBox) {
            if(staffNoCheckBox.isSelected()) {
                updateStaffNoTF.setEnabled(true);
                updateProjButton.setEnabled(true);
            } else {
                updateStaffNoTF.setEnabled(false);
                updateProjButton.setEnabled(false);
            }           
        }
        
        if(evt.getSource() == statusCheckBox) {
            if(statusCheckBox.isSelected()) {
                statusComboBox.setEnabled(true);
                updateProjButton.setEnabled(true);
            } else {
                statusComboBox.setEnabled(false);
                updateProjButton.setEnabled(false);
            }           
        }
    }//GEN-LAST:event_checkBoxesHandler

    private void clearUpdateButtonHandler(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearUpdateButtonHandler
        // clear textfields, table selection and disable buttons
        extensionCheckBox.setSelected(false);
        updateExtensionTF.setText("");
        updateProjButton.setEnabled(false);
        staffNoCheckBox.setSelected(false);
        updateStaffNoTF.setText("");
        updateProjButton.setEnabled(false);
        statusCheckBox.setSelected(false);
        statusComboBox.setEnabled(false);
        updateSuccessLabel.setText("");
        updateProjButton.setEnabled(false);
        updateProjTable.clearSelection();
    }//GEN-LAST:event_clearUpdateButtonHandler

    private void updateProjButtonHandler(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateProjButtonHandler
        // ensure project selected from table first
        if(updateProjTable.getSelectionModel().isSelectionEmpty() == true) {
            // displaying of NULL items selected error message */
            JOptionPane.showMessageDialog( null, "Select a Project from Table!","Update Project Error- Street Sparkle", JOptionPane.WARNING_MESSAGE );
        } else {
            // update project extension days after validation
            if(extensionCheckBox.isSelected() == true) {
                updateSuccessLabel.setText(""); // clear label text
                if(updateExtensionTF.getText().isBlank() == true) {
                    updateSuccessLabel.setText("On check box selection, fill the field!");
                } else if(Integer.parseInt(updateExtensionTF.getText()) <= 0) {
                    // display error message
                    JOptionPane.showMessageDialog( null, "Extension days should be greater than zero!", "Update Project Error - Street Sparkle", JOptionPane.WARNING_MESSAGE );
                } else {
                    // update details into database
                    int projId = aProject.selectedProjectDetails(updateProjTable);
                    database.updateProjectExtend(Integer.parseInt(updateExtensionTF.getText()), projId);
                    updateSuccessLabel.setText("Updated Successfully!");
                }
            }
            
            // update project staffing no. after validation
            if(staffNoCheckBox.isSelected() == true) {
                updateSuccessLabel.setText(""); // clear label text
                if(updateStaffNoTF.getText().isBlank() == true) {
                    updateSuccessLabel.setText("On check box selection, fill the field!");
                } else if(Integer.parseInt(updateStaffNoTF.getText()) <= 0) {
                    // display error message
                    JOptionPane.showMessageDialog( null, "Staffing number should be greater than zero!", "Update Project Error - Street Sparkle", JOptionPane.WARNING_MESSAGE );
                } else {
                    // update details into database
                    int projId = aProject.selectedProjectDetails(updateProjTable);
                    database.updateProjectStaffNo(Integer.parseInt(updateStaffNoTF.getText()), projId);
                    updateSuccessLabel.setText("Updated Successfully!");
                }
            }
            
            // update project staffing no. after validation
            if(statusCheckBox.isSelected() == true) {
                updateSuccessLabel.setText(""); // clear label text
                String status = statusComboBox.getSelectedItem().toString();
                int projId = aProject.selectedProjectDetails(updateProjTable);
                // update details into database
                database.updateProjectStatus(status, projId);
                updateSuccessLabel.setText("Updated Successfully!");
            }
        }
    }//GEN-LAST:event_updateProjButtonHandler

    private void updateProjTableMouseClickedHandler(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateProjTableMouseClickedHandler
        // load project before & after pics for selected project
        int projId = aProject.selectedProjectDetails(updateProjTable);
        // load before pic into Jlabel
        beforePicLabel.setIcon(null); // clear icon first
        aProject.loadBeforePic(projId, beforePicLabel);
        // load after pic into Jlabel
        afterPicLabel.setIcon(null); // clear icon first
        aProject.loadAfterPic(projId, afterPicLabel);
    }//GEN-LAST:event_updateProjTableMouseClickedHandler


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel SalesProjMainPanel;
    private javax.swing.JLabel afterPicLabel;
    private javax.swing.JLabel beforePicLabel;
    private javax.swing.JButton clearUpdateButton;
    private javax.swing.JTextField endTF;
    private javax.swing.JCheckBox extensionCheckBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField locationTF;
    private javax.swing.JComboBox<String> projCountyComboBox;
    private javax.swing.JComboBox<String> projTitleComboBox;
    private javax.swing.JTabbedPane projectsTabbedPane;
    private javax.swing.JTable regProjectTable;
    private javax.swing.JPanel registerTabPanel;
    private javax.swing.JButton resetProjButton;
    private javax.swing.JCheckBox staffNoCheckBox;
    private javax.swing.JTextField staffNoTF;
    private javax.swing.JTextField startTF;
    private javax.swing.JCheckBox statusCheckBox;
    private javax.swing.JComboBox<String> statusComboBox;
    private javax.swing.JButton submitProjButton;
    private javax.swing.JTextField updateExtensionTF;
    private javax.swing.JButton updateProjButton;
    private javax.swing.JTable updateProjTable;
    private javax.swing.JTextField updateStaffNoTF;
    private javax.swing.JLabel updateSuccessLabel;
    private javax.swing.JPanel updateTabPanel;
    private javax.swing.JTextField vehicleTF;
    // End of variables declaration//GEN-END:variables
}
