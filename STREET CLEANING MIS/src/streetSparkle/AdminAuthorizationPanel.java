/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package streetSparkle;

import javax.swing.table.DefaultTableModel;

/**
 *
 * @author John Felix
 */
public class AdminAuthorizationPanel extends javax.swing.JPanel {
    
    public Database database; // class obj
    public Staff aStaff; // class obj

    /**
     * Creates new form AdminAuthorizationPanel
     */
    public AdminAuthorizationPanel() {
        /* variable instatiation */
        database = new Database();
        aStaff = new Staff();
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        authPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        staffTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        titleSuccessLabel = new javax.swing.JLabel();
        titleCheckBox = new javax.swing.JCheckBox();
        titleComboBox = new javax.swing.JComboBox<>();
        resetButton = new javax.swing.JButton();
        statusComboBox = new javax.swing.JComboBox<>();
        statusSuccessLabel = new javax.swing.JLabel();
        statusCheckBox = new javax.swing.JCheckBox();
        updateButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                componentHiddenHandler(evt);
            }
            public void componentShown(java.awt.event.ComponentEvent evt) {
                componentShownHandler(evt);
            }
        });

        mainPanel.setBackground(new java.awt.Color(198, 255, 255));

        authPanel.setBackground(new java.awt.Color(249, 251, 253));
        authPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 102, 0), 2));

        jLabel1.setFont(new java.awt.Font("Sitka Heading", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("Select Staff Details to update from table");

        staffTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "First name", "Mid name", "Sur name", "Gender", "ID", "Phone", "Email", "County", "Title "
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        staffTable.setGridColor(new java.awt.Color(255, 0, 0));
        staffTable.setSelectionBackground(new java.awt.Color(255, 204, 102));
        staffTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        staffTable.setShowGrid(true);
        jScrollPane1.setViewportView(staffTable);

        jLabel2.setFont(new java.awt.Font("Sitka Heading", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setText("Update authorization");

        titleSuccessLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        titleSuccessLabel.setForeground(new java.awt.Color(255, 0, 0));

        titleCheckBox.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        titleCheckBox.setText("Staff Title");
        titleCheckBox.setToolTipText("check to update staff title");
        titleCheckBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                checkBoxesCheckedHandler(evt);
            }
        });

        titleComboBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        titleComboBox.setMaximumRowCount(6);
        titleComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SUPERVISOR", "HUMAN RESOURCE", "SALES & FINANCE", "TOOLS MANAGER", "DRIVER", "ADMIN" }));
        titleComboBox.setEnabled(false);

        resetButton.setBackground(new java.awt.Color(255, 153, 0));
        resetButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        resetButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Icons/refresh(1).png"))); // NOI18N
        resetButton.setText("Reset");
        resetButton.setToolTipText("click to reset fields");
        resetButton.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonHandler(evt);
            }
        });

        statusComboBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        statusComboBox.setMaximumRowCount(2);
        statusComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ACTIVE", "TERMINATED" }));
        statusComboBox.setEnabled(false);

        statusSuccessLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        statusSuccessLabel.setForeground(new java.awt.Color(255, 0, 0));

        statusCheckBox.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        statusCheckBox.setText("Staff Status");
        statusCheckBox.setToolTipText("check to update staff status");
        statusCheckBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                checkBoxesCheckedHandler(evt);
            }
        });

        updateButton.setBackground(new java.awt.Color(255, 153, 0));
        updateButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        updateButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Icons/folder-download(1).png"))); // NOI18N
        updateButton.setText("Update");
        updateButton.setToolTipText("click to update staff details");
        updateButton.setEnabled(false);
        updateButton.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonHandler(evt);
            }
        });

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Images/image3.jpeg"))); // NOI18N
        jLabel5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout authPanelLayout = new javax.swing.GroupLayout(authPanel);
        authPanel.setLayout(authPanelLayout);
        authPanelLayout.setHorizontalGroup(
            authPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(authPanelLayout.createSequentialGroup()
                .addGroup(authPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(authPanelLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(authPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1060, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(authPanelLayout.createSequentialGroup()
                        .addGap(261, 261, 261)
                        .addGroup(authPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(authPanelLayout.createSequentialGroup()
                                .addGroup(authPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(titleCheckBox, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(titleSuccessLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(statusSuccessLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(statusCheckBox, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(authPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(authPanelLayout.createSequentialGroup()
                                        .addComponent(titleComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(38, 38, 38)
                                        .addComponent(resetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(authPanelLayout.createSequentialGroup()
                                        .addComponent(statusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(38, 38, 38)
                                        .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(authPanelLayout.createSequentialGroup()
                                .addGap(121, 121, 121)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        authPanelLayout.setVerticalGroup(
            authPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(authPanelLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(titleSuccessLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(authPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(resetButton, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                    .addComponent(titleComboBox)
                    .addComponent(titleCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusSuccessLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(authPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(updateButton, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                    .addComponent(statusComboBox)
                    .addComponent(statusCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(authPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addComponent(authPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void checkBoxesCheckedHandler(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_checkBoxesCheckedHandler
        // on click, enable the comboboxes and buttons
        if(evt.getSource() == titleCheckBox) {
            if(titleCheckBox.isSelected()) {
                titleComboBox.setEnabled(true);
                updateButton.setEnabled(true);
            } else {
                titleComboBox.setEnabled(false);
                updateButton.setEnabled(false);
            }           
        }
        
        if(evt.getSource() == statusCheckBox) {
            if(statusCheckBox.isSelected()) {
                statusComboBox.setEnabled(true);
                updateButton.setEnabled(true);
            } else {
                statusComboBox.setEnabled(false);
                updateButton.setEnabled(false);
            }           
        }
    }//GEN-LAST:event_checkBoxesCheckedHandler

    private void resetButtonHandler(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonHandler
        // clear labels and disable button
        titleCheckBox.setSelected(false);
        titleSuccessLabel.setText("");
        titleComboBox.setEnabled(false);
        statusCheckBox.setSelected(false);
        statusSuccessLabel.setText("");
        statusComboBox.setEnabled(false);
        updateButton.setEnabled(false);
        aStaff.getStaffList().clear(); // clear list objects
        // clear table data 
        DefaultTableModel model = ( DefaultTableModel ) staffTable.getModel();
        model.getDataVector().removeAllElements();
        model.fireTableDataChanged(); // notifies the JTable that the model has changed
    }//GEN-LAST:event_resetButtonHandler

    private void updateButtonHandler(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonHandler
        // update title after selection from combobox
        if(titleComboBox.isEnabled() == true) {
            // record update to db
            String staffTitle = titleComboBox.getSelectedItem().toString();
            int staffID = aStaff.selectedStaffDetails(staffTable); // selected staff's id from table
            database.updateStaffTitle(staffTitle, staffID, titleSuccessLabel); 
        }
        
        // update status after selection from combobox
        if(statusComboBox.isEnabled() == true) {
            // record update to db
            String staffStatus = statusComboBox.getSelectedItem().toString();
            int staffID = aStaff.selectedStaffDetails(staffTable); // selected staff's id from table
            database.updateStaffStatus(staffStatus, staffID, statusSuccessLabel); 
        }
    }//GEN-LAST:event_updateButtonHandler

    private void componentShownHandler(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_componentShownHandler
        // fill in table with data
        aStaff.fetchStaffsDetails(staffTable);
    }//GEN-LAST:event_componentShownHandler

    private void componentHiddenHandler(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_componentHiddenHandler
        // clear table and list data
        aStaff.getStaffList().clear(); // clear list objects
        // clear table data 
        DefaultTableModel model = ( DefaultTableModel ) staffTable.getModel();
        model.getDataVector().removeAllElements();
        model.fireTableDataChanged(); // notifies the JTable that the model has changed
        // close database connection
        database.closeDB();
    }//GEN-LAST:event_componentHiddenHandler


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel authPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JButton resetButton;
    private javax.swing.JTable staffTable;
    private javax.swing.JCheckBox statusCheckBox;
    private javax.swing.JComboBox<String> statusComboBox;
    private javax.swing.JLabel statusSuccessLabel;
    private javax.swing.JCheckBox titleCheckBox;
    private javax.swing.JComboBox<String> titleComboBox;
    private javax.swing.JLabel titleSuccessLabel;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
