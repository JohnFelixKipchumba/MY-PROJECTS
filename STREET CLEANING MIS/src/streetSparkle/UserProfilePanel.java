/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package streetSparkle;

import java.io.*;
import javax.swing.*;
import javax.imageio.ImageIO;
import java.awt.*;
import java.awt.image.BufferedImage;

/**
 *
 * @author John Felix
 */
public class UserProfilePanel extends javax.swing.JPanel {
    
    public Database database; // class obj
    public Staff aStaff; // class obj

    /**
     * Creates new form UserProfilePanel
     */
    public UserProfilePanel() {
        /* variable instatiation */
        database = new Database();
        aStaff = new Staff();
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        profileMainPanel = new javax.swing.JPanel();
        personalDetailsPanel = new javax.swing.JPanel();
        profilePicLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        staffIDLabel = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        genderLabel = new javax.swing.JLabel();
        nationalIDLabel = new javax.swing.JLabel();
        phoneLabel = new javax.swing.JLabel();
        birthDateLabel = new javax.swing.JLabel();
        emailLabel = new javax.swing.JLabel();
        addressLabel = new javax.swing.JLabel();
        countyLabel = new javax.swing.JLabel();
        employDateLabel = new javax.swing.JLabel();
        titleLabel = new javax.swing.JLabel();
        salaryLabel = new javax.swing.JLabel();
        perksLabel = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        updateDetailsPanel = new javax.swing.JPanel();
        emailCheckBox = new javax.swing.JCheckBox();
        emailUpdateTF = new javax.swing.JTextField();
        emailUpdateButton = new javax.swing.JButton();
        emailUpdateLabel = new javax.swing.JLabel();
        phoneUpdateLabel = new javax.swing.JLabel();
        phoneCheckBox = new javax.swing.JCheckBox();
        phoneUpdateTF = new javax.swing.JTextField();
        phoneUpdateButton = new javax.swing.JButton();
        addressCheckBox = new javax.swing.JCheckBox();
        addressUpdateLabel = new javax.swing.JLabel();
        addressUpdateButton = new javax.swing.JButton();
        addressUpdateTF = new javax.swing.JTextField();
        countyCheckBox = new javax.swing.JCheckBox();
        countyUpdateButton = new javax.swing.JButton();
        countyUpdateLabel = new javax.swing.JLabel();
        usernameUpdateTF = new javax.swing.JTextField();
        usernameUpdateButton = new javax.swing.JButton();
        usernameCheckBox = new javax.swing.JCheckBox();
        usernameUpdateLabel = new javax.swing.JLabel();
        passwordUpdateTF = new javax.swing.JTextField();
        passwordUpdateLabel = new javax.swing.JLabel();
        passwordCheckBox = new javax.swing.JCheckBox();
        passwordUpdateButton = new javax.swing.JButton();
        resetPersonalDetButton = new javax.swing.JButton();
        countyComboBox = new javax.swing.JComboBox<>();

        fileChooser.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);
        fileChooser.setDialogTitle("Upload Profile Picture");
        fileChooser.setFileFilter(new MyCustomFilter());

        setPreferredSize(new java.awt.Dimension(1150, 700));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                componentHiddenHandler(evt);
            }
            public void componentShown(java.awt.event.ComponentEvent evt) {
                loadProfileDetailsHandler(evt);
            }
        });

        profileMainPanel.setBackground(new java.awt.Color(249, 251, 253));

        personalDetailsPanel.setBackground(new java.awt.Color(255, 255, 255));
        personalDetailsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 255, 255), new java.awt.Color(255, 0, 0), new java.awt.Color(0, 102, 0), new java.awt.Color(51, 204, 0)), "Personal Details", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.BELOW_TOP, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        profilePicLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        profilePicLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Icons/user(2).png"))); // NOI18N
        profilePicLabel.setToolTipText("click to upload your profile picture");
        profilePicLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        profilePicLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                profilePicLabelMouseClickedHandler(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 102, 0));
        jLabel2.setLabelFor(staffIDLabel);
        jLabel2.setText("Staff S/N");

        jLabel3.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 102, 0));
        jLabel3.setLabelFor(nameLabel);
        jLabel3.setText("Name");

        jLabel4.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 102, 0));
        jLabel4.setLabelFor(genderLabel);
        jLabel4.setText("Gender");

        jLabel5.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 102, 0));
        jLabel5.setLabelFor(nationalIDLabel);
        jLabel5.setText("National ID");

        jLabel6.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 102, 0));
        jLabel6.setLabelFor(birthDateLabel);
        jLabel6.setText("Birth Date");

        jLabel7.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 102, 0));
        jLabel7.setLabelFor(phoneLabel);
        jLabel7.setText("Phone Number");

        jLabel8.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 102, 0));
        jLabel8.setLabelFor(emailLabel);
        jLabel8.setText("Email");

        jLabel9.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 102, 0));
        jLabel9.setLabelFor(addressLabel);
        jLabel9.setText("Address");

        jLabel10.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 102, 0));
        jLabel10.setLabelFor(countyLabel);
        jLabel10.setText("County");

        jLabel12.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 102, 0));
        jLabel12.setLabelFor(employDateLabel);
        jLabel12.setText("Employment Date");

        jLabel14.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 12)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 102, 0));
        jLabel14.setLabelFor(titleLabel);
        jLabel14.setText("Staff Title");

        jLabel15.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 12)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 102, 0));
        jLabel15.setLabelFor(salaryLabel);
        jLabel15.setText("Salary");

        jLabel16.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 12)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 102, 0));
        jLabel16.setLabelFor(perksLabel);
        jLabel16.setText("Perks");

        staffIDLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        nameLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        genderLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        nationalIDLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        phoneLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        birthDateLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        emailLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        addressLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        countyLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        employDateLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        titleLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        salaryLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        perksLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Images/image3.jpeg"))); // NOI18N

        javax.swing.GroupLayout personalDetailsPanelLayout = new javax.swing.GroupLayout(personalDetailsPanel);
        personalDetailsPanel.setLayout(personalDetailsPanelLayout);
        personalDetailsPanelLayout.setHorizontalGroup(
            personalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(personalDetailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(personalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, personalDetailsPanelLayout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(staffIDLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(personalDetailsPanelLayout.createSequentialGroup()
                        .addGroup(personalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(personalDetailsPanelLayout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(phoneLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(personalDetailsPanelLayout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(birthDateLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(personalDetailsPanelLayout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(emailLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(personalDetailsPanelLayout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(countyLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(personalDetailsPanelLayout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addressLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(12, 12, 12)
                        .addGroup(personalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(personalDetailsPanelLayout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(personalDetailsPanelLayout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(genderLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(personalDetailsPanelLayout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nationalIDLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(personalDetailsPanelLayout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(personalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(employDateLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                    .addComponent(titleLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(salaryLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(perksLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(personalDetailsPanelLayout.createSequentialGroup()
                        .addComponent(profilePicLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        personalDetailsPanelLayout.setVerticalGroup(
            personalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(personalDetailsPanelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(personalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(personalDetailsPanelLayout.createSequentialGroup()
                        .addGroup(personalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(staffIDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(personalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(nameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(personalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(genderLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(personalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(nationalIDLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(personalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(birthDateLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(personalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(phoneLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(personalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(employDateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(personalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(emailLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(personalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(personalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(addressLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(personalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(salaryLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(personalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(personalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(perksLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(countyLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(profilePicLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(12, 12, 12))
        );

        updateDetailsPanel.setBackground(new java.awt.Color(255, 255, 255));
        updateDetailsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, new java.awt.Color(255, 0, 255), new java.awt.Color(51, 0, 204), new java.awt.Color(0, 153, 255)), "Update Personal Details", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.BELOW_TOP, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        emailCheckBox.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        emailCheckBox.setForeground(new java.awt.Color(0, 0, 204));
        emailCheckBox.setText("Email");
        emailCheckBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                updateStaffDetailsCheckBoxesHandler(evt);
            }
        });

        emailUpdateTF.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        emailUpdateTF.setEnabled(false);

        emailUpdateButton.setBackground(new java.awt.Color(153, 204, 255));
        emailUpdateButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        emailUpdateButton.setText("Update");
        emailUpdateButton.setToolTipText("click to update email");
        emailUpdateButton.setEnabled(false);
        emailUpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailUpdateButtonHandler(evt);
            }
        });

        emailUpdateLabel.setForeground(new java.awt.Color(255, 0, 0));
        emailUpdateLabel.setLabelFor(emailUpdateTF);

        phoneUpdateLabel.setForeground(new java.awt.Color(255, 0, 0));
        phoneUpdateLabel.setLabelFor(phoneUpdateTF);

        phoneCheckBox.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        phoneCheckBox.setForeground(new java.awt.Color(0, 0, 204));
        phoneCheckBox.setText("Phone");
        phoneCheckBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                updateStaffDetailsCheckBoxesHandler(evt);
            }
        });

        phoneUpdateTF.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        phoneUpdateTF.setEnabled(false);

        phoneUpdateButton.setBackground(new java.awt.Color(153, 204, 255));
        phoneUpdateButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        phoneUpdateButton.setText("Update");
        phoneUpdateButton.setToolTipText("click to update phone");
        phoneUpdateButton.setEnabled(false);
        phoneUpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoneUpdateButtonHandler(evt);
            }
        });

        addressCheckBox.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        addressCheckBox.setForeground(new java.awt.Color(0, 0, 204));
        addressCheckBox.setText("Address");
        addressCheckBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                updateStaffDetailsCheckBoxesHandler(evt);
            }
        });

        addressUpdateLabel.setForeground(new java.awt.Color(255, 0, 0));
        addressUpdateLabel.setLabelFor(addressUpdateTF);

        addressUpdateButton.setBackground(new java.awt.Color(153, 204, 255));
        addressUpdateButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        addressUpdateButton.setText("Update");
        addressUpdateButton.setToolTipText("click to update address");
        addressUpdateButton.setEnabled(false);
        addressUpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addressUpdateButtonHandler(evt);
            }
        });

        addressUpdateTF.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        addressUpdateTF.setEnabled(false);

        countyCheckBox.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        countyCheckBox.setForeground(new java.awt.Color(0, 0, 204));
        countyCheckBox.setText("County");
        countyCheckBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                updateStaffDetailsCheckBoxesHandler(evt);
            }
        });

        countyUpdateButton.setBackground(new java.awt.Color(153, 204, 255));
        countyUpdateButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        countyUpdateButton.setText("Update");
        countyUpdateButton.setToolTipText("click to update county");
        countyUpdateButton.setEnabled(false);
        countyUpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                countyUpdateButtonHandler(evt);
            }
        });

        countyUpdateLabel.setForeground(new java.awt.Color(255, 0, 0));
        countyUpdateLabel.setLabelFor(countyComboBox);

        usernameUpdateTF.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        usernameUpdateTF.setEnabled(false);

        usernameUpdateButton.setBackground(new java.awt.Color(153, 204, 255));
        usernameUpdateButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        usernameUpdateButton.setText("Update");
        usernameUpdateButton.setToolTipText("click to update username");
        usernameUpdateButton.setEnabled(false);
        usernameUpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameUpdateButtonHandler(evt);
            }
        });

        usernameCheckBox.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        usernameCheckBox.setForeground(new java.awt.Color(0, 0, 204));
        usernameCheckBox.setText("Username");
        usernameCheckBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                updateStaffDetailsCheckBoxesHandler(evt);
            }
        });

        usernameUpdateLabel.setForeground(new java.awt.Color(255, 0, 0));
        usernameUpdateLabel.setLabelFor(usernameUpdateTF);

        passwordUpdateTF.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        passwordUpdateTF.setEnabled(false);

        passwordUpdateLabel.setForeground(new java.awt.Color(255, 0, 0));
        passwordUpdateLabel.setLabelFor(passwordUpdateTF);

        passwordCheckBox.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        passwordCheckBox.setForeground(new java.awt.Color(0, 0, 204));
        passwordCheckBox.setText("Password");
        passwordCheckBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                updateStaffDetailsCheckBoxesHandler(evt);
            }
        });

        passwordUpdateButton.setBackground(new java.awt.Color(153, 204, 255));
        passwordUpdateButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        passwordUpdateButton.setText("Update");
        passwordUpdateButton.setToolTipText("click to update password");
        passwordUpdateButton.setEnabled(false);
        passwordUpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordUpdateButtonHandler(evt);
            }
        });

        resetPersonalDetButton.setBackground(new java.awt.Color(153, 204, 255));
        resetPersonalDetButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        resetPersonalDetButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Icons/refresh.png"))); // NOI18N
        resetPersonalDetButton.setText("Reset");
        resetPersonalDetButton.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        resetPersonalDetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetPersonalDetButtonHandler(evt);
            }
        });

        countyComboBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        countyComboBox.setMaximumRowCount(5);
        countyComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MOMBASA", "KWALE", "KILIFI", "TANA RIVER", "LAMU", "TAITA/TAVETA", "GARISSA", "WAJIR", "MANDERA", "MARSABIT", "ISIOLO", "MERU", "THARAKA-NITHI", "EMBU", "KITUI", "MACHAKOS", "MAKUENI", "NYANDARUA", "NYERI", "KIRINYAGA", "MURANG'A", "KIAMBU", "TURKANA", "WEST POKOT", "SAMBURU", "TRANS NZOIA", "UASIN GISHU", "ELGEYO/MARAKWET", "NANDI", "BARINGO", "LAIKIPIA", "NAKURU", "NAROK", "KAJIADO", "KERICHO", "BOMET", "KAKAMEGA", "VIHIGA", "BUNGOMA", "BUSIA", "SIAYA", "KISUMU", "HOMA BAY", "MIGORI", "KISII", "NYAMIRA", "NAIROBI CITY" }));
        countyComboBox.setEnabled(false);

        javax.swing.GroupLayout updateDetailsPanelLayout = new javax.swing.GroupLayout(updateDetailsPanel);
        updateDetailsPanel.setLayout(updateDetailsPanelLayout);
        updateDetailsPanelLayout.setHorizontalGroup(
            updateDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateDetailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(updateDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(emailCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(phoneCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addressCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(countyCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(usernameCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwordCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(updateDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(resetPersonalDetButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(emailUpdateLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(emailUpdateTF)
                    .addComponent(phoneUpdateLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(phoneUpdateTF)
                    .addComponent(addressUpdateLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addressUpdateTF)
                    .addComponent(countyUpdateLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(usernameUpdateTF)
                    .addComponent(usernameUpdateLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(passwordUpdateTF)
                    .addComponent(countyComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(updateDetailsPanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(passwordUpdateLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(updateDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(emailUpdateButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(phoneUpdateButton, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                    .addComponent(addressUpdateButton, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                    .addComponent(countyUpdateButton, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                    .addComponent(usernameUpdateButton, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                    .addComponent(passwordUpdateButton, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE))
                .addContainerGap())
        );
        updateDetailsPanelLayout.setVerticalGroup(
            updateDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateDetailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(emailUpdateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(updateDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(emailUpdateButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(emailUpdateTF)
                    .addComponent(emailCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(phoneUpdateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(updateDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(phoneUpdateButton, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                    .addComponent(phoneUpdateTF)
                    .addComponent(phoneCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addressUpdateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(updateDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(addressUpdateButton, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                    .addComponent(addressUpdateTF)
                    .addComponent(addressCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(countyUpdateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(updateDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(countyUpdateButton, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                    .addComponent(countyCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(countyComboBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(usernameUpdateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(updateDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(usernameUpdateButton, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                    .addComponent(usernameUpdateTF)
                    .addComponent(usernameCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(passwordUpdateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(updateDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(passwordUpdateButton, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                    .addComponent(passwordUpdateTF)
                    .addComponent(passwordCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(resetPersonalDetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout profileMainPanelLayout = new javax.swing.GroupLayout(profileMainPanel);
        profileMainPanel.setLayout(profileMainPanelLayout);
        profileMainPanelLayout.setHorizontalGroup(
            profileMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profileMainPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(personalDetailsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(updateDetailsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );
        profileMainPanelLayout.setVerticalGroup(
            profileMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profileMainPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(profileMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(personalDetailsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(updateDetailsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(profileMainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(profileMainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void profilePicLabelMouseClickedHandler(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_profilePicLabelMouseClickedHandler
        // call to new file chooser
        int returnVal = fileChooser.showSaveDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            try {
                // display selected image file into profilepic jlabel
                BufferedImage bufferedImage = ImageIO.read(file);
                Image image = bufferedImage.getScaledInstance(170, 170, Image.SCALE_DEFAULT);
                ImageIcon icon = new ImageIcon(image);
                profilePicLabel.setIcon(icon);
                // store selected image file into database
                database.updateStaffProfilePic(file.toString(), Authenticator.getStaffId());
              
            } catch (IOException ex) {
                // display warning message
                JOptionPane.showMessageDialog( null, "Problem accessing file: " + file.getAbsolutePath(),"Profile Warning - Street Sparkle", JOptionPane.WARNING_MESSAGE );
            } catch (IllegalArgumentException | NullPointerException e) {
                // display warning message
                JOptionPane.showMessageDialog( null, "Please select Image Files Only!","Profile Warning - Street Sparkle", JOptionPane.WARNING_MESSAGE );              
            }
        } else {
            //System.out.println("File access cancelled by user.");
            // do nothing
        }
        //Reset the file chooser for the next time it's shown.
        fileChooser.setSelectedFile(null);
    }//GEN-LAST:event_profilePicLabelMouseClickedHandler

    private void loadProfileDetailsHandler(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_loadProfileDetailsHandler
        // load staff details from database via componentShown event
        int staffID = Authenticator.getStaffId(); // get staff national ID from login
        aStaff.displayDetails(staffID, staffIDLabel, nameLabel, genderLabel, nationalIDLabel,
                birthDateLabel, phoneLabel, emailLabel, addressLabel, countyLabel, employDateLabel, 
                titleLabel, salaryLabel, perksLabel);
        // load staff profile pic from database
        aStaff.displayProfilePic(staffID, profilePicLabel);
    }//GEN-LAST:event_loadProfileDetailsHandler

    private void updateStaffDetailsCheckBoxesHandler(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_updateStaffDetailsCheckBoxesHandler
        // on click, enable the selected check boxes' text fields and buttons
        if(evt.getSource() == emailCheckBox) {
            if(emailCheckBox.isSelected()) {
                emailUpdateTF.setEnabled(true);
                emailUpdateButton.setEnabled(true);
            } else {
                emailUpdateTF.setEnabled(false);
                emailUpdateButton.setEnabled(false);
            }           
        }
        
        if(evt.getSource() == phoneCheckBox) {
            if(phoneCheckBox.isSelected()) {
                phoneUpdateTF.setEnabled(true);
                phoneUpdateButton.setEnabled(true);
            } else {
                phoneUpdateTF.setEnabled(false);
                phoneUpdateButton.setEnabled(false);
            }           
        }
        
        if(evt.getSource() == addressCheckBox) {
            if(addressCheckBox.isSelected()) {
                addressUpdateTF.setEnabled(true);
                addressUpdateButton.setEnabled(true);
            } else {
                addressUpdateTF.setEnabled(false);
                addressUpdateButton.setEnabled(false);
            }           
        }
        
        if(evt.getSource() == countyCheckBox) {
            if(countyCheckBox.isSelected()) {
                countyComboBox.setEnabled(true);
                countyUpdateButton.setEnabled(true);
            } else {
                countyComboBox.setEnabled(false);
                countyUpdateButton.setEnabled(false);
            }           
        }
        
        if(evt.getSource() == usernameCheckBox) {
            if(usernameCheckBox.isSelected()) {
                usernameUpdateTF.setEnabled(true);
                usernameUpdateButton.setEnabled(true);
            } else {
                usernameUpdateTF.setEnabled(false);
                usernameUpdateButton.setEnabled(false);
            }           
        }
        
        if(evt.getSource() == passwordCheckBox) {
            if(passwordCheckBox.isSelected()) {
                passwordUpdateTF.setEnabled(true);
                passwordUpdateButton.setEnabled(true);
            } else {
                passwordUpdateTF.setEnabled(false);
                passwordUpdateButton.setEnabled(false);
            }           
        }
    }//GEN-LAST:event_updateStaffDetailsCheckBoxesHandler

    private void resetPersonalDetButtonHandler(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetPersonalDetButtonHandler
        // clear textfields and disable buttons
        emailCheckBox.setSelected(false);
        emailUpdateLabel.setText("");
        emailUpdateTF.setText("");
        emailUpdateTF.setEnabled(false);
        emailUpdateButton.setEnabled(false);
        phoneCheckBox.setSelected(false);
        phoneUpdateLabel.setText("");
        phoneUpdateTF.setText("");
        phoneUpdateTF.setEnabled(false);
        phoneUpdateButton.setEnabled(false);
        addressCheckBox.setSelected(false);
        addressUpdateLabel.setText("");
        addressUpdateTF.setText("");
        addressUpdateTF.setEnabled(false);
        addressUpdateButton.setEnabled(false);
        usernameCheckBox.setSelected(false);
        usernameUpdateLabel.setText("");
        usernameUpdateTF.setText("");
        usernameUpdateTF.setEnabled(false);
        usernameUpdateButton.setEnabled(false);
        passwordCheckBox.setSelected(false);
        passwordUpdateLabel.setText("");
        passwordUpdateTF.setText("");
        passwordUpdateTF.setEnabled(false);
        passwordUpdateButton.setEnabled(false);
        countyCheckBox.setSelected(false);
        countyUpdateLabel.setText("");
        countyComboBox.setEnabled(false);
        countyUpdateButton.setEnabled(false);
    }//GEN-LAST:event_resetPersonalDetButtonHandler

    private void emailUpdateButtonHandler(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailUpdateButtonHandler
        // update email address after validation
        if(emailUpdateTF.getText().isBlank()) {
            emailUpdateLabel.setText("Required field");
        } else if(Authenticator.validateEmail(emailUpdateTF.getText()) == false) {
            // display warning message
            JOptionPane.showMessageDialog( null, "Please input a valid Email address!", "Update Warning - Street Sparkle", JOptionPane.WARNING_MESSAGE );
        } else {
            // record update to db
            database.updateStaffEmail(emailUpdateTF.getText(), Authenticator.getStaffId()); 
            emailUpdateLabel.setText("Updated Successfully");
        }
    }//GEN-LAST:event_emailUpdateButtonHandler

    private void phoneUpdateButtonHandler(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoneUpdateButtonHandler
        // update phone no. after validation
        if(phoneUpdateTF.getText().isBlank()) {
            phoneUpdateLabel.setText("Required field");
        } else if(Authenticator.validateMobileNo(phoneUpdateTF.getText()) == false) {
            // display warning message
            JOptionPane.showMessageDialog( null, "Please input a valid Phone number (10 digits)!", "Update Warning - Street Sparkle", JOptionPane.WARNING_MESSAGE );
        } else {
            // record update to db
            database.updateStaffPhone(Integer.parseInt(phoneUpdateTF.getText()), Authenticator.getStaffId()); 
            phoneUpdateLabel.setText("Updated Successfully");
        }
    }//GEN-LAST:event_phoneUpdateButtonHandler

    private void addressUpdateButtonHandler(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addressUpdateButtonHandler
        // update address after validation
        if(addressUpdateTF.getText().isBlank()) {
            addressUpdateLabel.setText("Required field");
        } else {
            // record update to db
            database.updateStaffAddress(addressUpdateTF.getText(), Authenticator.getStaffId()); 
            addressUpdateLabel.setText("Updated Successfully");
        }
    }//GEN-LAST:event_addressUpdateButtonHandler

    private void countyUpdateButtonHandler(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_countyUpdateButtonHandler
        // update county after selection from combobox
        if(countyComboBox.isEnabled() == true) {
            // record update to db
            String staffCounty = countyComboBox.getSelectedItem().toString();
            database.updateStaffCounty(staffCounty, Authenticator.getStaffId()); 
            countyUpdateLabel.setText("Updated Successfully");
        }
    }//GEN-LAST:event_countyUpdateButtonHandler

    private void usernameUpdateButtonHandler(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameUpdateButtonHandler
        // update username after validation
        if(usernameUpdateTF.getText().isBlank()) {
            usernameUpdateLabel.setText("Required field");
        } else {
            // record update to db
            database.updateStaffUsername(usernameUpdateTF.getText(), Authenticator.getStaffId()); 
            usernameUpdateLabel.setText("Updated Successfully");
        }
    }//GEN-LAST:event_usernameUpdateButtonHandler

    private void passwordUpdateButtonHandler(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordUpdateButtonHandler
        // update password after validation
        if(passwordUpdateTF.getText().isBlank()) {
            passwordUpdateLabel.setText("Required field");
        } else if(passwordUpdateTF.getText().length() < 6) {
            // display warning message
            JOptionPane.showMessageDialog( null, "Please input a valid password, 6 characters or more!", "Update Warning - Street Sparkle", JOptionPane.WARNING_MESSAGE );
        } else {
            // record update to db
            database.updateStaffPassword(passwordUpdateTF.getText(), Authenticator.getStaffId()); 
            passwordUpdateLabel.setText("Updated Successfully");
        }
    }//GEN-LAST:event_passwordUpdateButtonHandler

    private void componentHiddenHandler(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_componentHiddenHandler
        // close database connection
        //database.closeDB();
    }//GEN-LAST:event_componentHiddenHandler


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox addressCheckBox;
    private javax.swing.JLabel addressLabel;
    private javax.swing.JButton addressUpdateButton;
    private javax.swing.JLabel addressUpdateLabel;
    private javax.swing.JTextField addressUpdateTF;
    private javax.swing.JLabel birthDateLabel;
    private javax.swing.JCheckBox countyCheckBox;
    private javax.swing.JComboBox<String> countyComboBox;
    private javax.swing.JLabel countyLabel;
    private javax.swing.JButton countyUpdateButton;
    private javax.swing.JLabel countyUpdateLabel;
    private javax.swing.JCheckBox emailCheckBox;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JButton emailUpdateButton;
    private javax.swing.JLabel emailUpdateLabel;
    private javax.swing.JTextField emailUpdateTF;
    private javax.swing.JLabel employDateLabel;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JLabel genderLabel;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JLabel nationalIDLabel;
    private javax.swing.JCheckBox passwordCheckBox;
    private javax.swing.JButton passwordUpdateButton;
    private javax.swing.JLabel passwordUpdateLabel;
    private javax.swing.JTextField passwordUpdateTF;
    private javax.swing.JLabel perksLabel;
    private javax.swing.JPanel personalDetailsPanel;
    private javax.swing.JCheckBox phoneCheckBox;
    private javax.swing.JLabel phoneLabel;
    private javax.swing.JButton phoneUpdateButton;
    private javax.swing.JLabel phoneUpdateLabel;
    private javax.swing.JTextField phoneUpdateTF;
    private javax.swing.JPanel profileMainPanel;
    private javax.swing.JLabel profilePicLabel;
    private javax.swing.JButton resetPersonalDetButton;
    private javax.swing.JLabel salaryLabel;
    private javax.swing.JLabel staffIDLabel;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JPanel updateDetailsPanel;
    private javax.swing.JCheckBox usernameCheckBox;
    private javax.swing.JButton usernameUpdateButton;
    private javax.swing.JLabel usernameUpdateLabel;
    private javax.swing.JTextField usernameUpdateTF;
    // End of variables declaration//GEN-END:variables
}

/**
*   new MyCustomFilter() class
**/
class MyCustomFilter extends javax.swing.filechooser.FileFilter {

    public final static String JPEG = "jpeg";
    public final static String JPG = "jpg";
    public final static String GIF = "gif";
    public final static String TIFF = "tiff";
    public final static String TIF = "tif";
    public final static String PNG = "png";

    // Get the extension of a file.
    public static String getExtension(File f) {
        String ext = null;
        String s = f.getName();
        int i = s.lastIndexOf('.');

        if (i > 0 &&  i < s.length() - 1) {
            ext = s.substring(i+1).toLowerCase();
        }
        return ext;
    }

    //Accept all directories and all gif, jpg, tiff, or png files
    @Override
    public boolean accept(File f) {
        if (f.isDirectory()) {
            return true;
        }

        String extension = getExtension(f);
        if (extension != null) {
            return extension.equals(TIFF) ||
                    extension.equals(TIF) ||
                    extension.equals(GIF) ||
                    extension.equals(JPEG) ||
                    extension.equals(JPG) ||
                    extension.equals(PNG);
        }

        return false;
    }

    //The description of this filter
    @Override
    public String getDescription() {
        return "Just Images";
    }

 } // end class MyCustomFilter
